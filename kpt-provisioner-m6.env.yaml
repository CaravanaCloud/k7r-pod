# https://karpenter.sh/v0.30/concepts/provisioners/
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: "kpt-provisioner-m6"
spec:
  weight: 10
  consolidation:
    enabled: true
  labels:
    Environment: karpenter
  
  # Resource limits constrain the total size of the cluster.
  # Limits prevent Karpenter from creating new instances once the limit is exceeded.
  limits:
    resources:
      cpu: "128"
      memory: 256Gi
  labels:
    node-role.kubernetes.io/app: ""
    node-role.kubernetes.io/worker: ""
  requirements:
    - key: karpenter.k8s.aws/instance-category
      operator: In
      values: [m]
    - key: karpenter.k8s.aws/instance-generation
      operator: In
      values: ["6"]
    - key: "topology.kubernetes.io/zone"
      operator: In
      values: ["${AWS_REGION}a","${AWS_REGION}b","${AWS_REGION}c"]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: ["on-demand"]
    - key: "karpenter.k8s.aws/instance-cpu"
      operator: Gt
      values: ["2"]
    - key: "karpenter.k8s.aws/instance-memory"
      operator: Gt
      values: ["4096"]
    - key: "karpenter.k8s.aws/instance-pods"
      operator: Gt
      values: ["20"]
  providerRef:
    name: "kpt-${MACHINESET_NAME}"

---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: "kpt-${MACHINESET_NAME}"
spec:
  subnetSelector:
    kubernetes.io/cluster/${INFRA_NAME}: owned
    kubernetes.io/role/internal-elb: ""
  securityGroupSelector:
    Name: "${MACHINESET_SG_NAME}"
  instanceProfile: "${MACHINESET_INSTANCE_PROFILE}"
  amiFamily: Custom
  tags:
    cluster_name: $CLUSTER_NAME
    Environment: autoscaler
  amiSelector:
    aws-ids: "${MACHINESET_AMI_ID}"
  userData: |
    $MACHINESET_USER_DATA